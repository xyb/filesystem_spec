# content of: tox.ini , put in same dir as setup.py
[tox]
#envlist = {py36,py37,py38}
#envlist = py{36,37,38}-{linux,macos,windows}
envlist = py{38}-{linux,macos,windows}

[gh-actions]
python =
    3.6: py36
    3.7: py37
    3.8: py38

[gh-actions:env]
PLATFORM =
    ubuntu-latest: linux
    macos-latest: macos
    windows-latest: windows

[core]
conda_channels=
    defaults
    conda-forge
conda_deps=
    pip
    paramiko
    requests
    zstandard
    python-snappy
    aiohttp
    lz4
    distributed
    dask
    pyarrow
    panel
    pygit2
    git
    s3fs
    pyftpdlib
    cloudpickle
    pytest
    pytest-benchmark
    pytest-cov
    fusepy==3.0.1
    msgpack-python<1.0.0
deps=
    hadoop-test-cluster==0.1.0
    smbprotocol

[dev]
conda_deps=
    conda-forge::pre-commit=1.18
    black=19.3b0
    flake8
deps=

[testenv]
description=Run test suite against target versions.
conda_channels=
    {[core]conda_channels}
conda_deps=
    {[core]conda_deps}
deps=
    {[core]deps}
    #linux: <Linux specific deps>
    #macos: <macOS specific deps>
    #windows: <Windows specific deps>
commands =
    py.test -v -r s
passenv = TRAVIS

[testenv:coverage]
description=Run test suite with coverage enabled.
basepython=python3.7
conda_channels=
    {[core]conda_channels}
conda_deps=
    {[core]conda_deps}
deps=
    {[core]deps}
commands =
    py.test --cov=fsspec -v -r s
passenv = TRAVIS

[testenv:dev]
description=Setup conda dev env under '.tox/dev'.
basepython=python3.7
usedevelop=True
conda_channels=
    {[core]conda_channels}
conda_deps=
    {[core]conda_deps}
    {[dev]conda_deps}
deps=
    {[core]deps}
    {[dev]deps}
commands =

[testenv:lint]
description=Run pre-commit checks.
basepython=python3.7
skip_install=True
conda_deps=
    {[dev]conda_deps}
deps=
    {[dev]deps}
commands_pre=
    pre-commit install --install-hooks
commands=
    pre-commit run --all-files --show-diff-on-failure

[testenv:s3fs]
description=Run s3fs (@master) test suite against fsspec.
extras=s3
conda_channels=
    conda-forge
    defaults
conda_deps=
    {[core]conda_deps}
    httpretty
    moto
changedir=.tox/s3fs/tmp
whitelist_externals=
    rm
    git
setenv=
    BOTO_CONFIG=/dev/null
    AWS_ACCESS_KEY_ID=foobar_key
    AWS_SECRET_ACCESS_KEY=foobar_secret
commands=
    rm -rf s3fs
    git clone https://github.com/dask/s3fs
    py.test -vv s3fs/s3fs

[testenv:gcsfs]
description=Run gcsfs (@master) test suite against fsspec.
extras=gcs
conda_channels=
    defaults
    conda-forge
conda_deps=
    {[core]conda_deps}
deps=
    {[core]deps}
    vcrpy
    google-auth-oauthlib
changedir=.tox/gcsfs/tmp
whitelist_externals=
    rm
    git
setenv=
    GCSFS_RECORD_MODE=none
commands=
    rm -rf gcsfs
    git clone https://github.com/dask/gcsfs
    py.test -vv gcsfs/gcsfs -k 'not fuse'
