name: tests

on:
  push:
    branches:
      - "*"
  pull_request:

jobs:
  tests:
    name: py${{ matrix.python-version }}, ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        #python-version: [3.6, 3.7, 3.8]
        python-version: [3.8]
        os: ["ubuntu-latest", "macOS-latest", "windows-latest"]
      fail-fast: false
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - uses: conda-incubator/setup-miniconda@v1
      with:
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}
    - name: Conda info
      shell: bash -l {0}
      run: conda info
    - name: Conda list
      shell: pwsh
      run: conda list
    - name: Install tox
      run: |
        conda config --set always_yes yes --set changeps1 no
        conda install -c conda-forge tox tox-conda
    - name: Install dependencies
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          sudo apt update -y && sudo apt install -y libsnappy-dev libfuse-dev
        elif [ "$RUNNER_OS" == "Windows" ]; then
          #choco install important_windows_software
          echo "nothing to install"
        elif [ "$RUNNER_OS" == "macOS" ]; then
         brew install snappy
        else
          echo "$RUNNER_OS not supported"
          exit 1
        fi
      shell: bash
    - name: Test with tox
      shell: bash -l {0}
      run: |
        conda activate test
        tox
      env:
        PLATFORM: ${{ matrix.os }}
